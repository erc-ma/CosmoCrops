import React from "react";
import PropTypes from "prop-types";
import { NumberOrCallback, SliceNumberOrCallback, StringOrCallback, VictoryCommonProps, VictoryStyleInterface } from "victory-core";
export declare type VictorySliceLabelPositionType = "startAngle" | "centroid" | "endAngle";
export declare type VictorySliceLabelPlacementType = "vertical" | "parallel" | "perpendicular";
export declare type VictorySliceTTargetType = "data" | "labels" | "parent";
export interface SliceProps extends VictoryCommonProps {
    ariaLabel?: StringOrCallback;
    cornerRadius?: SliceNumberOrCallback<SliceProps, "cornerRadius">;
    datum?: any;
    innerRadius?: NumberOrCallback;
    padAngle?: SliceNumberOrCallback<SliceProps, "padAngle">;
    pathComponent?: React.ReactElement;
    pathFunction?: (props: SliceProps) => string;
    radius?: SliceNumberOrCallback<SliceProps, "radius">;
    slice?: {
        startAngle?: number;
        endAngle?: number;
        padAngle?: number;
        data?: any[];
    };
    sliceEndAngle?: SliceNumberOrCallback<SliceProps, "sliceEndAngle">;
    sliceStartAngle?: SliceNumberOrCallback<SliceProps, "sliceStartAngle">;
    style?: VictoryStyleInterface;
    tabIndex?: NumberOrCallback;
    role?: string;
    shapeRendering?: string;
}
export declare const Slice: {
    (initialProps: SliceProps): React.DetailedReactHTMLElement<any, HTMLElement>;
    propTypes: {
        cornerRadius: PropTypes.Requireable<number | ((...args: any[]) => any)>;
        datum: PropTypes.Requireable<object>;
        innerRadius: PropTypes.Requireable<number | ((...args: any[]) => any)>;
        padAngle: PropTypes.Requireable<number | ((...args: any[]) => any)>;
        pathComponent: PropTypes.Requireable<PropTypes.ReactElementLike>;
        pathFunction: PropTypes.Requireable<(...args: any[]) => any>;
        radius: PropTypes.Requireable<number | ((...args: any[]) => any)>;
        slice: PropTypes.Requireable<object>;
        sliceEndAngle: PropTypes.Requireable<number | ((...args: any[]) => any)>;
        sliceStartAngle: PropTypes.Requireable<number | ((...args: any[]) => any)>;
        active?: React.Validator<boolean | null | undefined> | undefined;
        ariaLabel?: React.Validator<StringOrCallback | null | undefined> | undefined;
        className?: React.Validator<string | null | undefined> | undefined;
        clipPath?: React.Validator<string | null | undefined> | undefined;
        data?: React.Validator<any> | undefined;
        desc?: React.Validator<string | Function | null | undefined> | undefined;
        disableInlineStyles?: React.Validator<boolean | null | undefined> | undefined;
        events?: React.Validator<object | null | undefined> | undefined;
        id?: React.Validator<string | number | Function | null | undefined> | undefined;
        index?: React.Validator<string | number | null | undefined> | undefined;
        origin?: React.Validator<import("victory-core").OriginType | null | undefined> | undefined;
        polar?: React.Validator<boolean | null | undefined> | undefined;
        role?: React.Validator<string | null | undefined> | undefined;
        scale?: React.Validator<any> | undefined;
        shapeRendering?: React.Validator<string | null | undefined> | undefined;
        style?: React.Validator<any> | undefined;
        tabIndex?: React.Validator<NumberOrCallback | null | undefined> | undefined;
        transform?: React.Validator<string | null | undefined> | undefined;
    };
};
//# sourceMappingURL=slice.d.ts.map